// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalServiceTask.Models;

#nullable disable

namespace TechnicalServiceTask.Migrations
{
    [DbContext(typeof(AppEntity))]
    [Migration("20240220093540_Auth")]
    partial class Auth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechnicalServiceTask.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TechnicalServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechnicalServiceId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TechnicalServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Code");

                    b.HasIndex("TechnicalServiceId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TechnicalServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechnicalServiceId");

                    b.ToTable("ResponsiblePersons");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.System", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentSystemId")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicalServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Code");

                    b.HasIndex("ParentSystemId");

                    b.HasIndex("TechnicalServiceId");

                    b.ToTable("Systems");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.TechnicalRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TechnicalRequests");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.TechnicalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlockIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("EmployeeIds")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SystemIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechnicalServices");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.Activity", b =>
                {
                    b.HasOne("TechnicalServiceTask.Models.TechnicalService", null)
                        .WithMany("Activities")
                        .HasForeignKey("TechnicalServiceId");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.Block", b =>
                {
                    b.HasOne("TechnicalServiceTask.Models.TechnicalService", null)
                        .WithMany("Blocks")
                        .HasForeignKey("TechnicalServiceId");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.Employee", b =>
                {
                    b.HasOne("TechnicalServiceTask.Models.TechnicalService", null)
                        .WithMany("Employees")
                        .HasForeignKey("TechnicalServiceId");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.System", b =>
                {
                    b.HasOne("TechnicalServiceTask.Models.System", "ParentSystem")
                        .WithMany()
                        .HasForeignKey("ParentSystemId");

                    b.HasOne("TechnicalServiceTask.Models.TechnicalService", null)
                        .WithMany("Systems")
                        .HasForeignKey("TechnicalServiceId");

                    b.Navigation("ParentSystem");
                });

            modelBuilder.Entity("TechnicalServiceTask.Models.TechnicalService", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Blocks");

                    b.Navigation("Employees");

                    b.Navigation("Systems");
                });
#pragma warning restore 612, 618
        }
    }
}
